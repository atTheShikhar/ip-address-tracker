{"version":3,"sources":["components/SearchBar.js","components/InfoBox.js","components/icon-location.svg","components/RenderMap.js","components/LoadingBox.js","App.js","index.js"],"names":["SearchBar","props","useState","ipaddress","setipaddress","onSubmit","ev","preventDefault","setIpAddress","className","type","name","onChange","val","target","value","placeholder","xmlns","width","height","fill","stroke","strokeWidth","d","InfoBox","data","ip","city","region","postal","timezone","org","split","slice","join","RenderMap","markerIcon","L","Icon","iconUrl","marker_icon","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","lat","lng","onScroll","MapContainer","center","zoom","scrollWheelZoom","zoomControl","TileLayer","attribution","url","Marker","position","icon","Popup","LoadingBox","App","locationData","setLocationData","ipAddress","invalidIp","setInvalidIp","apiEndpoint","a","fetch","res","json","hasOwnProperty","console","log","setTimeout","useEffect","fetchData","loc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27c57c4a.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nfunction SearchBar(props) {\n    const [ipaddress,setipaddress] = useState(\"\");\n    function setIp(ev) {\n        const val = ev.target.value;\n        setipaddress(val);\n    }\n    function submitHandler(ev) {\n        ev.preventDefault();\n        props.setIpAddress(ipaddress);\n    }\n    return (\n        <form onSubmit={submitHandler} className=\"search-wrapper\">\n            <input \n                type=\"text\" \n                name=\"ipaddress\" \n                className=\"search-bar\" \n                onChange={setIp} \n                value={ipaddress}\n                placeholder=\"Search for any IP ddress or domain\"\n                >\n\n            </input>\n            <button type=\"submit\" className=\"search-button\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"14\"><path fill=\"none\" stroke=\"#FFF\" strokeWidth=\"3\" d=\"M2 1l6 6-6 6\" /></svg>\n            </button>\n        </form>\n    )\n}\n\nexport default SearchBar\n","import React from \"react\";\n\nfunction InfoBox(props) {\n  const { data } = props;\n\n  return (\n    <div className=\"middle\">\n      <div className=\"ip wrapper\">\n        <div className=\"name\">IP ADDRESS</div>\n        <div className=\"value\">{data.ip}</div>\n      </div>\n\n      <div className=\"location wrapper\">\n        <div className=\"name\">LOCATION</div>\n        <div className=\"value\">\n          {data.city + \",\" + data.region + \" \" + data.postal}\n        </div>\n      </div>\n\n      <div className=\"timezone wrapper\">\n        <div className=\"name\">TIMEZONE</div>\n        <div className=\"value\">{data.timezone}</div>\n      </div>\n\n      <div className=\"isp wrapper\">\n        <div className=\"name\">ISP</div>\n        <div className=\"value\">{data.org.split(\" \").slice(1).join(\" \")}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoBox;\n","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React from 'react'\nimport {MapContainer,TileLayer,Marker,Popup} from 'react-leaflet';\nimport L from 'leaflet';\nimport marker_icon from './icon-location.svg'\n\nfunction RenderMap(props) {\n    //Custom icon\n    const markerIcon = new L.Icon({\n        iconUrl: marker_icon,\n        iconRetinaUrl: marker_icon,\n        iconAnchor: [23,56],\n        popupAnchor: [0,-28],\n        iconSize: [46,56],\n    });\n\n    const {lat,lng} = props;\n    const scrollListener = () => {\n        \n    }\n    return (\n        <div className=\"bottom\" onScroll={scrollListener}>\n            <MapContainer center={[lat,lng]} zoom={13} scrollWheelZoom={true} zoomControl={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={[lat,lng]} icon={markerIcon}>\n                    <Popup>\n                        Lattitude: {lat} <br />Longitude: {lng}\n                    </Popup>\n                </Marker>\n            </MapContainer>\n        </div>\n    )\n}\n\nexport default RenderMap\n","import React from 'react'\n\nfunction LoadingBox() {\n    return (\n        <div className=\"middle\">\n            <div className=\"wrapper\">\n                <div className=\"head text\"></div>\n                <div className=\"subhead text\"></div>\n            </div>\n\n            <div className=\"wrapper\">\n                <div className=\"head text\"></div>\n                <div className=\"subhead text\"></div>\n            </div>\n\n            <div className=\"wrapper\">\n                <div className=\"head text\"></div>\n                <div className=\"subhead text\"></div>\n            </div>\n\n            <div className=\"wrapper\">\n                <div className=\"head text\"></div>\n                <div className=\"subhead text\"></div>\n            </div>\n        </div>            \n    )   \n}\n\nexport default LoadingBox\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport \"./App.css\";\nimport InfoBox from \"./components/InfoBox\";\nimport RenderMap from \"./components/RenderMap\";\nimport LoadingBox from \"./components/LoadingBox\";\n\nfunction App() {\n  const [locationData, setLocationData] = useState(null);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  //Set this state if ip address entered is invalid\n  const [invalidIp, setInvalidIp] = useState(false);\n\n  // const apiEndpoint = `https://geo.ipify.org/api/v1?apiKey=${process.env.REACT_APP_API_KEY}&ipAddress=${ipAddress}`;\n  const apiEndpoint = `https://ipinfo.io/${ipAddress}?token=b4d0d97ba75d9b`;\n  // const apiEndpoint = `http://ip-api.com/json/${ipAddress}?fields=status,message,country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,query`;\n\n  async function fetchData() {\n    //Set to null so that to show loading screen\n    setLocationData(null);\n    const res = await fetch(apiEndpoint);\n    const data = await res.json();\n    if (data.hasOwnProperty(\"bogon\") || data.hasOwnProperty(\"error\")) {\n      console.log(data);\n      //Set Ip address to null so that page redirects to clients location\n      setIpAddress(\"\");\n\n      //Set invalidIp to true\n      setInvalidIp(true);\n      //After 3 seconds change invalidIp to false\n      setTimeout(() => {\n        setInvalidIp(false);\n      }, 3000);\n    } else {\n      setLocationData(data);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ipAddress]);\n\n  return (\n    <div className=\"main\">\n      {invalidIp ? <div className=\"error\">Invalid IP !</div> : <div></div>}\n\n      <div className=\"top\">\n        <div className=\"header\">IP Address Tracker</div>\n        <SearchBar setIpAddress={setIpAddress} />\n        {!locationData && <LoadingBox />}\n        {locationData && <InfoBox data={locationData} />}\n      </div>\n\n      {!locationData && <div className=\"bottom loading\">Loading...</div>}\n      {locationData && (\n        <RenderMap\n          lat={locationData.loc.split(\",\")[0]}\n          lng={locationData.loc.split(\",\")[1]}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}